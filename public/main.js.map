{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.guard.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/notfound/notfound.component.css","webpack:///./src/app/notfound/notfound.component.html","webpack:///./src/app/notfound/notfound.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { AuthGuard } from './auth.guard';\nimport { NotfoundComponent } from './notfound/notfound.component';\nimport { RegisterComponent } from './register/register.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { HomeComponent } from './home/home.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { ProfileComponent } from './profile/profile.component';\n\nconst routes: Routes = [\n  {path:'', component: HomeComponent},\n  {path:'dashboard', canActivate: [AuthGuard], component: DashboardComponent},\n  {path:'register', component: RegisterComponent},\n  {path:'login', component: LoginComponent},\n  {path:'profile', canActivate: [AuthGuard], component: ProfileComponent},\n  {path:'', redirectTo: '', pathMatch: 'full'},\n  {path:'**', component: NotfoundComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"\\n<app-navbar></app-navbar>\\n\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { HttpModule } from '@angular/http';\nimport { AuthService } from './auth.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './home/home.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { AppRoutingModule } from './/app-routing.module';\nimport { NotfoundComponent } from './notfound/notfound.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashboardComponent,\n    ProfileComponent,\n    NotfoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot()\n  ],\n  providers: [AuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { AuthService } from './auth.service';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private auth: AuthService, private router: Router) { }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    if(this.auth.loggedIn()) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { tokenNotExpired } from 'angular2-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  token: any;\n  user: any;\n\n  constructor(private http: Http) { }\n\n  register(user) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('users/register', user, {headers})\n      .map(res => res.json());\n  }\n\n  login(user) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('users/auth', user, {headers})\n      .map(res => res.json());\n  }\n\n  loggedIn() {\n    return tokenNotExpired('id_token');\n  }\n\n  getProfile() {\n    let headers = new Headers();\n    this.loadToken();\n    headers.append('Authorization', this.token);\n    headers.append('Content-Type', 'application/json');\n    return this.http.get('users/profile', {headers})\n      .map(res => res.json());\n  }\n\n  loadToken() {\n    this.token = localStorage.getItem('id_token'); \n  }\n\n  storeData(token, user) {\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user)); // localstorage doesn't store objects, just string\n    this.token = token;\n    this.user = user;\n  }\n\n  logout() {\n    this.token = null;\n    this.user = null;\n    localStorage.clear();\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  dashboard works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"jumbotron text-center\\\">\\n  <h1>MEAN Stack App</h1>\\n  <p class=\\\"lead\\\">Welcome to my MEAN application</p>\\n\\n  <div *ngIf=\\\"logged\\\">\\n    <a routerLink='/register' class=\\\"btn btn-primary\\\">Register</a>\\n    <a routerLink='/login' class=\\\"btn btn-default\\\">Login</a>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-4\\\">\\n    <h3>Express App</h3>\\n    <p>A node.js/express app using mongoose to connect with the database</p>\\n  </div>\\n  <div class=\\\"col-md-4\\\">\\n    <h3>Angular-CLI </h3>\\n    <p>to generate components, services and others</p>\\n  </div>\\n  <div class=\\\"col-md-4\\\">\\n    <h3>JWT Tokens</h3>\\n    <p>Authentication with JSON web tokens</p>\\n  </div>\\n</div>\"","import { AuthService } from './../auth.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  logged = false;\n\n  constructor(private auth: AuthService) { }\n\n  ngOnInit() {\n    if (!this.auth.loggedIn()) {\n      this.logged = true\n    } else {\n      this.logged = false;\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h2 class=\\\"page-header\\\">Register</h2>\\n\\n<form #form='ngForm' (submit)='loginUser()'>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"username\\\">Username</label>\\n    <input type=\\\"text\\\" name=\\\"username\\\" id=\\\"username\\\" [(ngModel)]='username'  #Username='ngModel' class=\\\"form-control\\\" required>\\n    <div class=\\\"alert alert-danger\\\" *ngIf='Username.invalid && (Username.dirty || Username.touched)'>\\n        <div *ngIf='Username.errors.required'>Username is required</div>\\n    </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"password\\\">Password</label>\\n    <input type=\\\"password\\\" name=\\\"password\\\" id=\\\"password\\\" [(ngModel)]='password' #Password='ngModel' class=\\\"form-control\\\" required>\\n    <div class=\\\"alert alert-danger\\\" *ngIf='Password.invalid && (Password.dirty || Password.touched)'>\\n        <div *ngIf='Password.errors.required'>Password is required</div>\\n    </div>\\n  </div>\\n\\n  <input type=\\\"submit\\\" value=\\\"Submit\\\" class=\\\"btn btn-primary\\\">\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './../auth.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username: String;\n  password: String;\n\n  constructor(private toaster: ToastrService, private auth: AuthService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  loginUser() {\n    const {username, password} = this;\n    const user = {username, password};\n\n    this.auth.login(user).subscribe(data => {\n      if (data.success) {\n          this.auth.storeData(data.token, data.user);\n          this.toaster.success(data.msg, 'Login', {\n            timeOut: 2000,\n            positionClass: 'toast-bottom-left'\n          });\n          this.router.navigate(['/dashboard']);\n      } else {\n        this.toaster.error(data.msg, 'Login', {\n          timeOut: 2000,\n          positionClass: 'toast-bottom-left'\n        });\n        this.router.navigate(['/login']);\n      }\n    });\n  }\n\n}\n","module.exports = \".active {\\r\\n    color: #fff;\\r\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark\\\">\\n  <a class=\\\"navbar-brand\\\" routerLink='/'>MEAN Stack</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarsExampleDefault\\\" aria-controls=\\\"navbarsExampleDefault\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarsExampleDefault\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      \\n    </ul>\\n    \\n    <ul class=\\\"navbar-nav ml-auto\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLinkActive='active' [routerLinkActiveOptions]='{exact: true}' routerLink='/'>Home</a>\\n        </li>\\n\\n        <li *ngIf=\\\"auth.loggedIn()\\\" class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLinkActive='active' [routerLinkActiveOptions]='{exact: true}' routerLink='/dashboard'>Dashboard</a>\\n        </li>\\n        <li *ngIf=\\\"auth.loggedIn()\\\" class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLinkActive='active' [routerLinkActiveOptions]='{exact: true}' routerLink='/profile'>Profile</a>\\n        </li>\\n      \\n      <li *ngIf=\\\"!auth.loggedIn()\\\" class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLinkActive='active' [routerLinkActiveOptions]='{exact: true}' routerLink='/login'>Login</a>\\n      </li>\\n      <li *ngIf=\\\"!auth.loggedIn()\\\" class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLinkActive='active' [routerLinkActiveOptions]='{exact: true}' routerLink='/register'>Register</a>\\n      </li>\\n      <li *ngIf=\\\"auth.loggedIn()\\\" class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" (click)=\\\"onLogout()\\\">Logout</a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './../auth.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(private toaster: ToastrService, private auth: AuthService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  onLogout() {\n    this.auth.logout();\n    this.toaster.success('Logged out successfully', 'Logout', {\n      timeOut: 2000,\n      positionClass: 'toast-bottom-left'\n    });\n    this.router.navigate(['/login']);\n    return false;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  notfound works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-notfound',\n  templateUrl: './notfound.component.html',\n  styleUrls: ['./notfound.component.css']\n})\nexport class NotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"user\\\">\\n  <h2 class=\\\"page-header\\\">{{user.name}}</h2>\\n\\n  <ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item\\\"> {{user.username}} </li>\\n    <li class=\\\"list-group-item\\\"> {{user.email}} </li>\\n  </ul>\\n</div>\\n\\n<div *ngIf=\\\"!user\\\">\\n  <h2 class=\\\"page-header\\\">Profile</h2>\\n</div>\\n\"","import { Router } from '@angular/router';\nimport { AuthService } from './../auth.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  user: Object;\n\n  constructor(private auth: AuthService, private router: Router) { }\n\n  ngOnInit() {\n    this.auth.getProfile().subscribe(profile => {\n      this.user = profile.user;\n    }, err => {\n      console.log(err);\n      return err;\n    })\n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"<h2 class=\\\"page-header\\\">Register</h2>\\n\\n<form #form='ngForm' (submit)='onSubmit()'>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"name\\\">Name</label>\\n    <input type=\\\"text\\\" name=\\\"name\\\" id=\\\"name\\\" [(ngModel)]='name' class=\\\"form-control\\\" #Name='ngModel' required>\\n    <div class=\\\"alert alert-danger\\\" *ngIf='Name.invalid && (Name.dirty || Name.touched)'>\\n      <div *ngIf='Name.errors.required'>Name is required</div>\\n    </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"username\\\">Username</label>\\n    <input type=\\\"text\\\" name=\\\"username\\\" id=\\\"username\\\" [(ngModel)]='username'  #Username='ngModel' class=\\\"form-control\\\" required>\\n    <div class=\\\"alert alert-danger\\\" *ngIf='Username.invalid && (Username.dirty || Username.touched)'>\\n        <div *ngIf='Username.errors.required'>Username is required</div>\\n    </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"email\\\">Email</label>\\n    <input type=\\\"text\\\" name=\\\"email\\\" id=\\\"email\\\" [(ngModel)]='email' #Email='ngModel' class=\\\"form-control\\\" email required>\\n    <div class=\\\"alert alert-danger\\\" *ngIf='Email.invalid && (Email.dirty || Email.touched)'>\\n        <div *ngIf='Email.errors.required'>Email is required</div>\\n        <div *ngIf='Email.errors.email'>Enter a valid email</div>\\n    </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"password\\\">Password</label>\\n    <input type=\\\"password\\\" name=\\\"password\\\" id=\\\"password\\\" [(ngModel)]='password' #Password='ngModel' class=\\\"form-control\\\" required minlength=\\\"8\\\">\\n    <div class=\\\"alert alert-danger\\\" *ngIf='Password.invalid && (Password.dirty || Password.touched)'>\\n        <div *ngIf='Password.errors.required'>Password is required</div>\\n        <div *ngIf='Password.errors.minlength'>Password must be at least 8 charactars</div>\\n    </div>\\n  </div>\\n\\n  <input type=\\\"submit\\\" value=\\\"Submit\\\" class=\\\"btn btn-primary\\\">\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './../auth.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n})\nexport class RegisterComponent implements OnInit {\n\n  name: String;\n  username: String;\n  email: String;\n  password: String;\n\n  constructor(private toaster: ToastrService, private auth: AuthService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    const {name, username, email, password} = this;\n    const user = {name, username, email, password};\n\n    this.auth.register(user).subscribe(data => {\n      if(data.success) {\n        this.success();\n        this.router.navigate(['/login']);\n      } else {\n        this.failed();\n      }\n    })\n    \n  }\n\n  success() {\n    this.toaster.success('Submit', 'Form submitted', {\n      timeOut: 2000,\n      positionClass: 'toast-bottom-left'\n    });\n  }\n\n  failed() {\n    this.toaster.success('Submit', 'Form submitted', {\n      timeOut: 30000\n    });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}